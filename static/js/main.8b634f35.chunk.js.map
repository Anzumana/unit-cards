{"version":3,"sources":["components/Card/CardTable.tsx","components/Card/CardFlags.tsx","components/Card/Card.tsx","fixtures/units.ts","components/StatForm/StatForm.tsx","fixtures/unitStats.ts","utils/statCalculator.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["CardTable","_ref","size","attack","defense","power","toughness","morale","react_default","a","createElement","className","AncestryFlag","experience","xmlns","viewBox","fill","d","includes","TypeFlag","_ref2","equipment","CardFlags","_ref3","ancestry","type","Fragment","CardFlags_AncestryFlag","CardFlags_TypeFlag","Card","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props$cardData","props","cardData","name","CardFlags_CardFlags","CardTable_CardTable","Component","unitAncestries","unitTypes","unitExperiences","unitEquipments","unitSizes","StatForm","state","update","onChange","e","target","currentTarget","map","ancestryStats","_ancestryStats","Bugbear","Dragonborn","Dwarf","Elf","defineProperty","App","objectSpread","_this","_this2","StatForm_StatForm","setState","Card_Card_Card","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b634f35.chunk.js","sourcesContent":["import React from 'react';\nimport { CardStats } from '../../types/units';\n\nexport const CardTable = ({\n  size,\n  attack,\n  defense,\n  power,\n  toughness,\n  morale,\n}: CardStats) => (\n  <table className=\"card-table\">\n    <tbody>\n      <tr>\n        <td>Attack:</td>\n        <td>{attack}</td>\n        <td>Defense:</td>\n        <td>{defense}</td>\n      </tr>\n      <tr>\n        <td>Power:</td>\n        <td>{power}</td>\n        <td>Toughness:</td>\n        <td>{toughness}</td>\n      </tr>\n      <tr>\n        <td>Morale:</td>\n        <td>{morale}</td>\n        <td>Size:</td>\n        <td>1{size}</td>\n      </tr>\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Card.css';\nimport {\n  UnitAncestry,\n  UnitType,\n  UnitEquipment,\n  UnitExperience,\n} from '../../types/units';\n\ninterface Props {\n  ancestry: UnitAncestry;\n  type: UnitType;\n  equipment: UnitEquipment;\n  experience: UnitExperience;\n}\nconst AncestryFlag = ({ experience }: { experience: UnitExperience }) => (\n  <div className=\"card-flag\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"207.116 0 197.769 792\">\n      <path\n        fill=\"#db1a21\"\n        d=\"M354.056 0v36.966h-96.112V0h-50.828V534.161L306 475.939l98.885 58.222V0z\"\n      />\n      {['Regular', 'Seasoned', 'Veteran', 'Elite', 'Super-Elite'].includes(\n        experience,\n      ) ? (\n        <path\n          fill=\"#8dc63f\"\n          d=\"M404.885 574.824L306 517.526l-98.884 57.298V551.72L306 494.423l98.885 57.297z\"\n        />\n      ) : null}\n      {['Seasoned', 'Veteran', 'Elite', 'Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#cbdb2a\"\n          d=\"M404.885 613.639L306 556.341l-98.884 57.298v-23.105L306 533.237l98.885 57.297z\"\n        />\n      ) : null}\n      {['Veteran', 'Elite', 'Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#ebd417\"\n          d=\"M404.885 653.377L306 596.079l-98.884 57.298v-23.104L306 572.976l98.885 57.297z\"\n        />\n      ) : null}\n      {['Elite', 'Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#ffc20e\"\n          d=\"M404.885 692.191L306 634.894l-98.884 57.297v-23.103L306 611.79l98.885 57.298z\"\n        />\n      ) : null}\n      {['Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#ffc20e\"\n          d=\"M306 666.315l11.09 23.104 24.952 2.772-17.559 18.484 3.697 24.952L306 723.612l-23.104 12.015 4.621-24.952-18.483-18.484 25.876-2.772zM269.034 727.31l10.166 21.254 24.028 2.773-17.56 16.635L290.29 792l-21.256-11.09L247.778 792l3.697-24.028-16.635-16.635 23.104-2.773zM342.966 727.31l10.166 21.254 24.028 2.773-17.559 16.635L364.222 792l-21.256-11.09L321.711 792l3.696-24.028-16.635-16.635 24.029-2.773z\"\n        />\n      ) : null}\n    </svg>\n  </div>\n);\n\nconst TypeFlag = ({ equipment }: { equipment: UnitEquipment }) => (\n  <div className=\"card-flag\">\n    {equipment === 'Light' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 66.8\">\n        <path\n          fill=\"#001522\"\n          d=\"M10.7 66.8L21.2 5.5l.2-1.4V0h-5.5v4.1H5.5V0H0v4.1l.2 1.4z\"\n        />\n      </svg>\n    ) : equipment === 'Medium' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 72.6\">\n        <path d=\"M15.9 0v3.3H5.5V0H0v5.5l1.5 67.1 6.9-17.5 2.3-6 2.3 6 6.9 17.5 1.5-67.1V0z\" />\n      </svg>\n    ) : equipment === 'Heavy' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 79.6\">\n        <path d=\"M15.9 0v4.1H5.5V0H0v5.5l1.5 74.1 4.6-29.4 4.6 29.4 4.6-29.4 4.6 29.4 1.5-74.1V0h-5.5z\" />\n      </svg>\n    ) : equipment === 'Super-Heavy' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 80.5\">\n        <path d=\"M15.9 0v3.3H5.5V0H0v5.5l1.5 75 4.6-1.9 4.6 1.9 4.6-1.9 4.6 1.9 1.5-75V0h-5.5z\" />\n      </svg>\n    ) : null}\n  </div>\n);\nexport const CardFlags = ({ ancestry, type, equipment, experience }: Props) => (\n  <>\n    <AncestryFlag experience={experience} />\n    <TypeFlag equipment={equipment} />\n  </>\n);\n","import React, { Component } from 'react';\nimport './Card.css';\nimport { CardData } from '../../types/units';\nimport { CardTable } from './CardTable';\nimport { CardFlags } from './CardFlags';\n\ninterface Props {\n  cardData: CardData;\n}\n\nexport class Card extends Component<Props> {\n  render() {\n    const {\n      name,\n      ancestry,\n      experience,\n      equipment,\n      type,\n      size,\n      attack,\n      defense,\n      power,\n      toughness,\n      morale,\n    } = this.props.cardData;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-inner\">\n          <div className=\"card-flags\">\n            <CardFlags\n              ancestry={ancestry}\n              type={type}\n              experience={experience}\n              equipment={equipment}\n            />\n          </div>\n          <div className=\"card-top\">\n            <div className=\"card-name\">{name}</div>\n            <div className=\"card-type\">\n              {ancestry} {experience}\n              <br />\n              {equipment} {type}\n            </div>\n          </div>\n          <div className=\"card-main\">\n            <CardTable\n              size={size}\n              attack={attack}\n              defense={defense}\n              power={power}\n              toughness={toughness}\n              morale={morale}\n            />\n            <div className=\"card-traits\">Traits</div>\n            <div>\n              <b>Courageous</b>. Once per battle, this unit can choose to\n              succeed on a Morale check it just failed.\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  UnitSize,\n  UnitEquipment,\n  UnitExperience,\n  UnitType,\n  UnitAncestry,\n} from '../types/units';\n\nexport const unitAncestries: UnitAncestry[] = [\n  'Bugbear',\n  'Dragonborn',\n  'Dwarf',\n  'Elf',\n  'Elven (Winged)',\n  'Ghoul',\n  'Gnoll',\n  'Gnome',\n  'Goblin',\n  'Hobgoblin',\n  'Human',\n  'Kobold',\n  'Lizardfolk',\n  'Ogre',\n  'Orc',\n  'Skeleton',\n  'Treant',\n  'Troll',\n  'Zombie',\n];\nexport const unitTypes: UnitType[] = [\n  'Levies',\n  'Infantry',\n  'Cavalry',\n  'Siege Engine',\n  'Archers',\n  'Airborne',\n];\nexport const unitExperiences: UnitExperience[] = [\n  'Green',\n  'Regular',\n  'Seasoned',\n  'Veteran',\n  'Elite',\n  'Super-Elite',\n];\nexport const unitEquipments: UnitEquipment[] = [\n  'Light',\n  'Medium',\n  'Heavy',\n  'Super-Heavy',\n];\nexport const unitSizes: UnitSize[] = ['d4', 'd6', 'd8', 'd10', 'd12'];\n","import React from 'react';\nimport { State } from '../../App';\nimport {\n  UnitAncestry,\n  UnitType,\n  UnitExperience,\n  UnitEquipment,\n  UnitSize,\n} from '../../types/units';\nimport {\n  unitAncestries,\n  unitTypes,\n  unitExperiences,\n  unitEquipments,\n  unitSizes,\n} from '../../fixtures/units';\n\ninterface Props {\n  state: State;\n  update: (i: Partial<State>) => void;\n}\nexport const StatForm = ({ state, update }: Props) => (\n  <>\n    <input\n      type=\"text\"\n      value={state.name}\n      onChange={(e) => update({ name: e.target.value })}\n    />\n    <select\n      value={state.ancestry}\n      onChange={(e) =>\n        update({\n          ancestry: e.currentTarget.value as UnitAncestry,\n        })\n      }\n    >\n      {unitAncestries.map((value) => (\n        <option value={value} key={value}>\n          {value}\n        </option>\n      ))}\n    </select>\n    <select\n      value={state.type}\n      onChange={(e) => update({ type: e.currentTarget.value as UnitType })}\n    >\n      {unitTypes.map((value) => (\n        <option value={value} key={value}>\n          {value}\n        </option>\n      ))}\n    </select>\n    <select\n      value={state.experience}\n      onChange={(e) =>\n        update({\n          experience: e.currentTarget.value as UnitExperience,\n        })\n      }\n    >\n      {unitExperiences.map((value) => (\n        <option value={value} key={value}>\n          {value}\n        </option>\n      ))}\n    </select>\n    <select\n      value={state.equipment}\n      onChange={(e) =>\n        update({\n          equipment: e.currentTarget.value as UnitEquipment,\n        })\n      }\n    >\n      {unitEquipments.map((value) => (\n        <option value={value} key={value}>\n          {value}\n        </option>\n      ))}\n    </select>\n    <select\n      value={state.size}\n      onChange={(e) =>\n        update({\n          size: e.currentTarget.value as UnitSize,\n        })\n      }\n    >\n      {unitSizes.map((value) => (\n        <option value={value} key={value}>\n          {value}\n        </option>\n      ))}\n    </select>\n  </>\n);\n","import { UnitAncestry } from '../types/units';\n\ninterface AncestryStatBlock {\n  attack: number;\n  power: number;\n  defense: number;\n  toughness: number;\n  morale: number;\n}\nexport const ancestryStats: { [k: string]: AncestryStatBlock } = {\n  Bugbear: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n  },\n  Dragonborn: {\n    attack: 2,\n    power: 2,\n    defense: 1,\n    toughness: 1,\n    morale: 2,\n  },\n  Dwarf: {\n    attack: 3,\n    power: 1,\n    defense: 1,\n    toughness: 1,\n    morale: 2,\n  },\n  Elf: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n  },\n  ['Elven (Winged)']: {\n    attack: 1,\n    power: 1,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n  },\n  Ghoul: {\n    attack: -1,\n    power: 0,\n    defense: 2,\n    toughness: 2,\n    morale: 0,\n  },\n  Gnoll: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n  },\n  Gnome: {\n    attack: 1,\n    power: -1,\n    defense: 1,\n    toughness: -1,\n    morale: 1,\n  },\n  Goblin: {\n    attack: -1,\n    power: -1,\n    defense: 1,\n    toughness: -1,\n    morale: 0,\n  },\n  Hobgoblin: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n  },\n  Human: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n  },\n  Kobold: {\n    attack: -1,\n    power: -1,\n    defense: 1,\n    toughness: -1,\n    morale: -1,\n  },\n  Lizardfolk: {\n    attack: 2,\n    power: 1,\n    defense: -1,\n    toughness: 1,\n    morale: 1,\n  },\n  Ogre: {\n    attack: 0,\n    power: 2,\n    defense: 0,\n    toughness: 2,\n    morale: 1,\n  },\n  Orc: {\n    attack: 2,\n    power: 1,\n    defense: 1,\n    toughness: 1,\n    morale: 2,\n  },\n  Skeleton: {\n    attack: -2,\n    power: -1,\n    defense: 1,\n    toughness: 1,\n    morale: 1,\n  },\n  Treant: {\n    attack: 0,\n    power: 2,\n    defense: 0,\n    toughness: 2,\n    morale: 0,\n  },\n  Troll: {\n    attack: 0,\n    power: 2,\n    defense: 0,\n    toughness: 2,\n    morale: 0,\n  },\n  Zombie: {\n    attack: -2,\n    power: 0,\n    defense: 2,\n    toughness: 2,\n    morale: 2,\n  },\n};\n","import { State } from '../App';\nimport { ancestryStats } from '../fixtures/unitStats';\n\nexport const attack = (state: State): number => {\n  return ancestryStats[state.ancestry].attack;\n};\n\nexport const power = (state: State): number => {\n  return ancestryStats[state.ancestry].power;\n};\n\nexport const defense = (state: State): number => {\n  return ancestryStats[state.ancestry].defense;\n};\n\nexport const toughness = (state: State): number => {\n  return ancestryStats[state.ancestry].toughness;\n};\n\nexport const morale = (state: State): number => {\n  return ancestryStats[state.ancestry].morale;\n};\n","import React, { Component } from 'react';\nimport { Card } from './components/Card/Card';\nimport {\n  UnitAncestry,\n  UnitType,\n  UnitExperience,\n  UnitEquipment,\n  UnitSize,\n  CardData,\n} from './types/units';\nimport { StatForm } from './components/StatForm/StatForm';\nimport {\n  attack,\n  defense,\n  power,\n  toughness,\n  morale,\n} from './utils/statCalculator';\n\nexport interface State {\n  name: string;\n  ancestry: UnitAncestry;\n  type: UnitType;\n  experience: UnitExperience;\n  equipment: UnitEquipment;\n  size: UnitSize;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    name: 'Unit Name',\n    ancestry: 'Human' as UnitAncestry,\n    type: 'Infantry' as UnitType,\n    experience: 'Green' as UnitExperience,\n    equipment: 'Light' as UnitEquipment,\n    size: 'd6' as UnitSize,\n  };\n\n  cardData = (): CardData => {\n    return {\n      ...this.state,\n      attack: attack(this.state),\n      defense: defense(this.state),\n      power: power(this.state),\n      toughness: toughness(this.state),\n      morale: morale(this.state),\n    };\n  };\n\n  render() {\n    return (\n      <>\n        <StatForm\n          state={this.state}\n          update={(state) => this.setState(state as State)}\n        />\n        <Card cardData={this.cardData()} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}