{"version":3,"sources":["components/CardFlags/assets/star.svg","components/CardFlags/assets/bow.svg","components/CardFlags/assets/sword.svg","components/CardFlags/assets/fork.svg","components/CardFlags/assets/catapult.svg","components/CardFlags/assets/wing.svg","components/CardFlags/assets/horseshoe.svg","components/CardFlags/assets/ancestry/bugbear.jpg","components/CardFlags/assets/ancestry/dragonborn.jpg","components/CardFlags/assets/ancestry/dwarf.jpg","components/CardFlags/assets/ancestry/elf.jpg","components/CardFlags/assets/ancestry/ghoul.jpg","components/CardFlags/assets/ancestry/gnoll.jpg","components/CardFlags/assets/ancestry/gnome.jpg","components/CardFlags/assets/ancestry/goblin.jpg","components/CardFlags/assets/ancestry/hobgoblin.jpg","components/CardFlags/assets/ancestry/human.jpg","components/CardFlags/assets/ancestry/kobold.jpg","components/CardFlags/assets/ancestry/lizardfolk.jpg","components/CardFlags/assets/ancestry/ogre.jpg","components/CardFlags/assets/ancestry/orc.jpg","components/CardFlags/assets/ancestry/skeleton.jpg","components/CardFlags/assets/ancestry/treant.jpg","components/CardFlags/assets/ancestry/troll.jpg","components/CardFlags/assets/ancestry/zombie.jpg","components/Card/CardTable.tsx","components/CardFlags/CardFlags.tsx","fixtures/unitStats.ts","fixtures/traits.ts","components/Card/Card.tsx","fixtures/units.ts","components/Collapse/Collapse.tsx","components/StatForm/StatForm.tsx","utils/statCalculator.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","positive","num","Math","sign","CardTable","_ref","size","attack","defense","power","toughness","morale","react_default","a","createElement","className","AncestryFlag","experience","ancestry","src","starImg","bugbearImg","dragonbornImg","dwarfImg","elfImg","ghoulImg","gnollImg","gnomeImg","goblinImg","hobgoblinImg","humanImg","koboldImg","lizardfolkImg","ogreImg","orcImg","skeletonImg","treantImg","trollImg","zombieImg","xmlns","viewBox","fill","d","includes","TypeFlag","_ref2","equipment","type","bowImg","swordImg","catapultImg","forkImg","horseshoeImg","wingImg","CardFlags","_ref3","Fragment","CardFlags_AncestryFlag","CardFlags_TypeFlag","ancestryStats","_ancestryStats","Bugbear","traits","Dragonborn","Dwarf","Elf","Object","defineProperty","experienceStats","_experienceStats","Green","Regular","Seasoned","Veteran","Elite","equipmentStats","_equipmentStats","Light","Medium","Heavy","typeStats","_typeStats","Levies","costMultiplier","Infantry","Cavalry","sizeStats","d4","d6","d8","d10","d12","traitData","name","cost","description","Trait","trait","Charge","Card_Trait","find","data","AlwaysDiminished","SiegeEngine","Card","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props$cardData","props","cardData","id","CardFlags_CardFlags_CardFlags","CardTable_CardTable","length","map","t","Card_Charge","Card_AlwaysDiminished","Card_SiegeEngine","Component","unitAncestries","unitTypes","unitExperiences","unitEquipments","unitSizes","Collapse","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","state","collapsed","_this2","href","onClick","setState","title","children","StatForm","update","onChange","e","target","currentTarget","disabled","Collapse_Collapse_Collapse","Number","baseless","forEach","traitName","round","App","objectSpread","StatForm_StatForm_StatForm","Card_Card_Card","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b82c7c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.7c4b1b11.svg\";","module.exports = __webpack_public_path__ + \"static/media/bow.4cd55cc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sword.93727841.svg\";","module.exports = __webpack_public_path__ + \"static/media/fork.89d80cf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/catapult.b3735e9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wing.f863c45e.svg\";","module.exports = __webpack_public_path__ + \"static/media/horseshoe.e5e1de74.svg\";","module.exports = __webpack_public_path__ + \"static/media/bugbear.72254e11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dragonborn.0610c61b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dwarf.00a8dc47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elf.cc448cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ghoul.ad6ffda2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gnoll.5ff4e610.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gnome.3da36bc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/goblin.cf7e8d99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hobgoblin.329b4878.jpg\";","module.exports = __webpack_public_path__ + \"static/media/human.ce07be4b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kobold.eeb46684.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lizardfolk.42f02ac4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ogre.c3c389b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/orc.c193e06d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/skeleton.ac93bcf2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/treant.08061c49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/troll.98b35916.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zombie.7fef1448.jpg\";","import React from 'react';\nimport { CardStats } from '../../types/units';\n\nconst positive = (num: number): string => (Math.sign(num) >= 0 ? '+' : '');\nexport const CardTable = ({\n  size,\n  attack,\n  defense,\n  power,\n  toughness,\n  morale,\n}: CardStats) => (\n  <table className=\"card-table\">\n    <tbody>\n      <tr>\n        <td>Attack:</td>\n        <td className=\"text-right pad-right\">\n          {positive(attack)}\n          {attack}\n        </td>\n        <td>Defense:</td>\n        <td className=\"text-right\">{defense}</td>\n      </tr>\n      <tr>\n        <td>Power:</td>\n        <td className=\"text-right pad-right\">\n          {positive(power)}\n          {power}\n        </td>\n        <td>Toughness:</td>\n        <td className=\"text-right\">{toughness}</td>\n      </tr>\n      <tr>\n        <td>Morale:</td>\n        <td className=\"text-right pad-right\">\n          {positive(morale)}\n          {morale}\n        </td>\n        <td>Size:</td>\n        <td className=\"text-right text-transform-none\">1{size}</td>\n      </tr>\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './CardFlags.css';\nimport starImg from './assets/star.svg';\nimport bowImg from './assets/bow.svg';\nimport swordImg from './assets/sword.svg';\nimport forkImg from './assets/fork.svg';\nimport catapultImg from './assets/catapult.svg';\nimport wingImg from './assets/wing.svg';\nimport horseshoeImg from './assets/horseshoe.svg';\nimport bugbearImg from './assets/ancestry/bugbear.jpg';\nimport dragonbornImg from './assets/ancestry/dragonborn.jpg';\nimport dwarfImg from './assets/ancestry/dwarf.jpg';\nimport elfImg from './assets/ancestry/elf.jpg';\nimport ghoulImg from './assets/ancestry/ghoul.jpg';\nimport gnollImg from './assets/ancestry/gnoll.jpg';\nimport gnomeImg from './assets/ancestry/gnome.jpg';\nimport goblinImg from './assets/ancestry/goblin.jpg';\nimport hobgoblinImg from './assets/ancestry/hobgoblin.jpg';\nimport humanImg from './assets/ancestry/human.jpg';\nimport koboldImg from './assets/ancestry/kobold.jpg';\nimport lizardfolkImg from './assets/ancestry/lizardfolk.jpg';\nimport ogreImg from './assets/ancestry/ogre.jpg';\nimport orcImg from './assets/ancestry/orc.jpg';\nimport skeletonImg from './assets/ancestry/skeleton.jpg';\nimport treantImg from './assets/ancestry/treant.jpg';\nimport trollImg from './assets/ancestry/troll.jpg';\nimport zombieImg from './assets/ancestry/zombie.jpg';\n\nimport {\n  UnitAncestry,\n  UnitType,\n  UnitEquipment,\n  UnitExperience,\n} from '../../types/units';\n\ninterface Props {\n  ancestry: UnitAncestry;\n  type: UnitType;\n  equipment: UnitEquipment;\n  experience: UnitExperience;\n}\nconst AncestryFlag = ({\n  experience,\n  ancestry,\n}: {\n  experience: UnitExperience;\n  ancestry: UnitAncestry;\n}) => (\n  <div className=\"card-flag\">\n    <img src={starImg} className=\"ancestry-icon\" />\n    {ancestry === 'Bugbear' ? (\n      <img src={bugbearImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Dragonborn' ? (\n      <img src={dragonbornImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Dwarf' ? (\n      <img src={dwarfImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Elf' || ancestry === 'Elven (Winged)' ? (\n      <img src={elfImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Ghoul' ? (\n      <img src={ghoulImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Gnoll' ? (\n      <img src={gnollImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Gnome' ? (\n      <img src={gnomeImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Goblin' ? (\n      <img src={goblinImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Hobgoblin' ? (\n      <img src={hobgoblinImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Human' ? (\n      <img src={humanImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Kobold' ? (\n      <img src={koboldImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Lizardfolk' ? (\n      <img src={lizardfolkImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Ogre' ? (\n      <img src={ogreImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Orc' ? (\n      <img src={orcImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Skeleton' ? (\n      <img src={skeletonImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Treant' ? (\n      <img src={treantImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Troll' ? (\n      <img src={trollImg} className=\"ancestry-image\" />\n    ) : ancestry === 'Zombie' ? (\n      <img src={zombieImg} className=\"ancestry-image\" />\n    ) : null}\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"207.116 0 197.769 792\">\n      <path\n        fill=\"#db1a21\"\n        d=\"M354.056 0v36.966h-96.112V0h-50.828V534.161L306 475.939l98.885 58.222V0z\"\n      />\n      {['Regular', 'Seasoned', 'Veteran', 'Elite', 'Super-Elite'].includes(\n        experience,\n      ) ? (\n        <path\n          fill=\"#8dc63f\"\n          d=\"M404.885 574.824L306 517.526l-98.884 57.298V551.72L306 494.423l98.885 57.297z\"\n        />\n      ) : null}\n      {['Seasoned', 'Veteran', 'Elite', 'Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#cbdb2a\"\n          d=\"M404.885 613.639L306 556.341l-98.884 57.298v-23.105L306 533.237l98.885 57.297z\"\n        />\n      ) : null}\n      {['Veteran', 'Elite', 'Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#ebd417\"\n          d=\"M404.885 653.377L306 596.079l-98.884 57.298v-23.104L306 572.976l98.885 57.297z\"\n        />\n      ) : null}\n      {['Elite', 'Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#ffc20e\"\n          d=\"M404.885 692.191L306 634.894l-98.884 57.297v-23.103L306 611.79l98.885 57.298z\"\n        />\n      ) : null}\n      {['Super-Elite'].includes(experience) ? (\n        <path\n          fill=\"#ffc20e\"\n          d=\"M306 666.315l11.09 23.104 24.952 2.772-17.559 18.484 3.697 24.952L306 723.612l-23.104 12.015 4.621-24.952-18.483-18.484 25.876-2.772zM269.034 727.31l10.166 21.254 24.028 2.773-17.56 16.635L290.29 792l-21.256-11.09L247.778 792l3.697-24.028-16.635-16.635 23.104-2.773zM342.966 727.31l10.166 21.254 24.028 2.773-17.559 16.635L364.222 792l-21.256-11.09L321.711 792l3.696-24.028-16.635-16.635 24.029-2.773z\"\n        />\n      ) : null}\n    </svg>\n  </div>\n);\n\nconst TypeFlag = ({\n  equipment,\n  type,\n}: {\n  equipment: UnitEquipment;\n  type: UnitType;\n}) => (\n  <div className=\"card-flag\">\n    {type === 'Archers' ? (\n      <img src={bowImg} className=\"type-icon\" />\n    ) : type === 'Infantry' ? (\n      <img src={swordImg} className=\"type-icon\" />\n    ) : type === 'Siege Engine' ? (\n      <img src={catapultImg} className=\"type-icon\" />\n    ) : type === 'Levies' ? (\n      <img src={forkImg} className=\"type-icon\" />\n    ) : type === 'Cavalry' ? (\n      <img src={horseshoeImg} className=\"type-icon\" />\n    ) : type === 'Flying' ? (\n      <img src={wingImg} className=\"type-icon\" />\n    ) : null}\n    {equipment === 'Light' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 66.8\">\n        <path\n          fill=\"#001522\"\n          d=\"M10.7 66.8L21.2 5.5l.2-1.4V0h-5.5v4.1H5.5V0H0v4.1l.2 1.4z\"\n        />\n      </svg>\n    ) : equipment === 'Medium' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 72.6\">\n        <path d=\"M15.9 0v3.3H5.5V0H0v5.5l1.5 67.1 6.9-17.5 2.3-6 2.3 6 6.9 17.5 1.5-67.1V0z\" />\n      </svg>\n    ) : equipment === 'Heavy' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 79.6\">\n        <path d=\"M15.9 0v4.1H5.5V0H0v5.5l1.5 74.1 4.6-29.4 4.6 29.4 4.6-29.4 4.6 29.4 1.5-74.1V0h-5.5z\" />\n      </svg>\n    ) : equipment === 'Super-Heavy' ? (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21.4 80.5\">\n        <path d=\"M15.9 0v3.3H5.5V0H0v5.5l1.5 75 4.6-1.9 4.6 1.9 4.6-1.9 4.6 1.9 1.5-75V0h-5.5z\" />\n      </svg>\n    ) : null}\n  </div>\n);\nexport const CardFlags = ({ ancestry, type, equipment, experience }: Props) => (\n  <>\n    <AncestryFlag\n      ancestry={ancestry}\n      experience={\n        type !== 'Levies' && type !== 'Siege Engine' ? experience : 'Green'\n      }\n    />\n    <TypeFlag equipment={type !== 'Levies' ? equipment : 'Light'} type={type} />\n  </>\n);\n","import { UnitAncestry } from '../types/units';\nimport { Trait } from '../types/traits';\n\ninterface StatBlock {\n  attack: number;\n  power: number;\n  defense: number;\n  toughness: number;\n  morale: number;\n}\n\ninterface AncestryStatBlock extends StatBlock {\n  traits: Trait[];\n}\nexport const ancestryStats: { [k: string]: AncestryStatBlock } = {\n  Bugbear: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n    traits: ['Martial'],\n  },\n  Dragonborn: {\n    attack: 2,\n    power: 2,\n    defense: 1,\n    toughness: 1,\n    morale: 2,\n    traits: ['Courageous'],\n  },\n  Dwarf: {\n    attack: 3,\n    power: 1,\n    defense: 1,\n    toughness: 1,\n    morale: 2,\n    traits: ['Stalwart'],\n  },\n  Elf: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n    traits: ['Eternal'],\n  },\n  ['Elven (Winged)']: {\n    attack: 1,\n    power: 1,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n    traits: ['Eternal'],\n  },\n  Ghoul: {\n    attack: -1,\n    power: 0,\n    defense: 2,\n    toughness: 2,\n    morale: 0,\n    traits: ['Undead', 'Horrify', 'Ravenous'],\n  },\n  Gnoll: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n    traits: ['Frenzy'],\n  },\n  Gnome: {\n    attack: 1,\n    power: -1,\n    defense: 1,\n    toughness: -1,\n    morale: 1,\n    traits: [],\n  },\n  Goblin: {\n    attack: -1,\n    power: -1,\n    defense: 1,\n    toughness: -1,\n    morale: 0,\n    traits: [],\n  },\n  Hobgoblin: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n    traits: ['Bred for war', 'Martial'],\n  },\n  Human: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n    traits: ['Courageous'],\n  },\n  Kobold: {\n    attack: -1,\n    power: -1,\n    defense: 1,\n    toughness: -1,\n    morale: -1,\n    traits: [],\n  },\n  Lizardfolk: {\n    attack: 2,\n    power: 1,\n    defense: -1,\n    toughness: 1,\n    morale: 1,\n    traits: ['Amphibious'],\n  },\n  Ogre: {\n    attack: 0,\n    power: 2,\n    defense: 0,\n    toughness: 2,\n    morale: 1,\n    traits: ['Brutal'],\n  },\n  Orc: {\n    attack: 2,\n    power: 1,\n    defense: 1,\n    toughness: 1,\n    morale: 2,\n    traits: ['Savage'],\n  },\n  Skeleton: {\n    attack: -2,\n    power: -1,\n    defense: 1,\n    toughness: 1,\n    morale: 1,\n    traits: ['Undead', 'Mindless'],\n  },\n  Treant: {\n    attack: 0,\n    power: 2,\n    defense: 0,\n    toughness: 2,\n    morale: 0,\n    traits: ['Twisting Roots', 'Rock-hurler'],\n  },\n  Troll: {\n    attack: 0,\n    power: 2,\n    defense: 0,\n    toughness: 2,\n    morale: 0,\n    traits: ['Regenerate'],\n  },\n  Zombie: {\n    attack: -2,\n    power: 0,\n    defense: 2,\n    toughness: 2,\n    morale: 2,\n    traits: ['Undead', 'Mindless'],\n  },\n  None: {\n    attack: 0,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 0,\n    traits: [],\n  },\n};\n\nexport const experienceStats: { [k: string]: StatBlock } = {\n  Green: {\n    attack: 0,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 0,\n  },\n  Regular: {\n    attack: 1,\n    power: 0,\n    defense: 0,\n    toughness: 1,\n    morale: 1,\n  },\n  Seasoned: {\n    attack: 1,\n    power: 0,\n    defense: 0,\n    toughness: 1,\n    morale: 2,\n  },\n  Veteran: {\n    attack: 1,\n    power: 0,\n    defense: 0,\n    toughness: 1,\n    morale: 3,\n  },\n  Elite: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 2,\n    morale: 4,\n  },\n  ['Super-Elite']: {\n    attack: 2,\n    power: 0,\n    defense: 0,\n    toughness: 2,\n    morale: 5,\n  },\n  None: {\n    attack: 0,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 0,\n  },\n};\n\nexport const equipmentStats: { [k: string]: StatBlock } = {\n  Light: {\n    attack: 0,\n    power: 1,\n    defense: 1,\n    toughness: 0,\n    morale: 0,\n  },\n  Medium: {\n    attack: 0,\n    power: 2,\n    defense: 2,\n    toughness: 0,\n    morale: 0,\n  },\n  Heavy: {\n    attack: 0,\n    power: 4,\n    defense: 4,\n    toughness: 0,\n    morale: 0,\n  },\n  ['Super-Heavy']: {\n    attack: 0,\n    power: 6,\n    defense: 6,\n    toughness: 0,\n    morale: 0,\n  },\n  None: {\n    attack: 0,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 0,\n  },\n};\n\ninterface TypeStatBlock extends StatBlock {\n  costMultiplier: number;\n}\nexport const typeStats: { [k: string]: TypeStatBlock } = {\n  Levies: {\n    attack: 0,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: -1,\n    costMultiplier: 0.75,\n  },\n  Infantry: {\n    attack: 0,\n    power: 0,\n    defense: 1,\n    toughness: 1,\n    morale: 0,\n    costMultiplier: 1,\n  },\n  Cavalry: {\n    attack: 1,\n    power: 1,\n    defense: 0,\n    toughness: 0,\n    morale: 2,\n    costMultiplier: 1.5,\n  },\n  ['Siege Engine']: {\n    attack: 1,\n    power: 1,\n    defense: 0,\n    toughness: 1,\n    morale: 0,\n    costMultiplier: 1.5,\n  },\n  Archers: {\n    attack: 0,\n    power: 1,\n    defense: 0,\n    toughness: 0,\n    morale: 1,\n    costMultiplier: 1.75,\n  },\n  Flying: {\n    attack: 0,\n    power: 0,\n    defense: 0,\n    toughness: 0,\n    morale: 3,\n    costMultiplier: 2,\n  },\n};\n\ninterface SizeStatBlock {\n  costMultiplier: number;\n}\nexport const sizeStats: { [k: string]: SizeStatBlock } = {\n  d4: { costMultiplier: 0.66 },\n  d6: { costMultiplier: 1 },\n  d8: { costMultiplier: 1.33 },\n  d10: { costMultiplier: 1.66 },\n  d12: { costMultiplier: 2 },\n};\n","import { Trait } from '../types/traits';\n\nexport interface TraitData {\n  name: Trait;\n  cost: number;\n  description: string;\n}\nexport const traitData: TraitData[] = [\n  {\n    name: 'Amphibious',\n    cost: 50,\n    description:\n      'This unit does not suffer terrain penalties for fighting in water or on land.',\n  },\n  {\n    name: 'Bred for war',\n    cost: 100,\n    description:\n      'This unit cannot be diminished, and cannot have disadvantage on morale checks.',\n  },\n  {\n    name: 'Brutal',\n    cost: 200,\n    description: 'This unit inflicts 2 casualties on a successful power check.',\n  },\n  {\n    name: 'Courageous',\n    cost: 50,\n    description:\n      'Once per battle, this unit can choose to succeed on a morale check it just failed.',\n  },\n  {\n    name: 'Eternal',\n    cost: 50,\n    description:\n      'This unit cannot be horrified, and it always succeeds on morale checks to attack undead and fiends.',\n  },\n  {\n    name: 'Frenzy',\n    cost: 50,\n    description:\n      'If this unit diminishes an enemy unit, it immediately makes a free attack against that unit.',\n  },\n  {\n    name: 'Horrify',\n    cost: 200,\n    description:\n      'If this unit inflicts a casualty on an enemy unit, that unit must make a dc 15 morale check.Failure exhausts the unit.',\n  },\n  {\n    name: 'Martial',\n    cost: 100,\n    description:\n      'If this unit succeeds on a power check and its size is greater than the defending unit, it inflicts 2 casualties.',\n  },\n  {\n    name: 'Mindless',\n    cost: 100,\n    description: 'This unit cannot fail morale checks.',\n  },\n  {\n    name: 'Regenerate',\n    cost: 200,\n    description:\n      'When this unit refreshes, increment its casualty die.This trait ceases to function if the unit suffers a casualty from battle magic.',\n  },\n  {\n    name: 'Ravenous',\n    cost: 50,\n    description:\n      'While any enemy unit is diminished, this unit can spend a round feeding on the corpses to increment their casualty die. ',\n  },\n  {\n    name: 'Rock-hurler',\n    cost: 250,\n    description:\n      'If this unit succeeds on an attack check, it inflicts 2 casualties.Against fortifications, it inflicts 1d6 casualties.',\n  },\n  {\n    name: 'Savage',\n    cost: 50,\n    description:\n      'This unit has advantage on the first attack check it makes each battle.',\n  },\n  {\n    name: 'Stalwart',\n    cost: 50,\n    description:\n      'Enemy battle magic has disadvantage on power checks against this unit.',\n  },\n  {\n    name: 'Twisting Roots',\n    cost: 200,\n    description:\n      'As an action, this unit can sap the walls of a fortification.Siege units have advantage on power checks against sapped fortifications.',\n  },\n  {\n    name: 'Undead',\n    cost: 50,\n    description:\n      'Green and regular troops must pass a morale check to attack this unit.Each enemy unit need only do this once.',\n  },\n  {\n    name: 'Charge',\n    description:\n      'Cannot use while engaged. A Charge is an attack with advantage on the Attack check.It inflicts 2 casualties on a successful Power check.The charging unit is then engaged with the defending unit and must make a DC 13 Morale check to disengage.',\n    cost: 0,\n  },\n  {\n    name: 'Always Diminished',\n    description: 'This unit it always diminished.',\n    cost: 0,\n  },\n  {\n    name: 'Siege Engine',\n    description:\n      'This unit can attack fortifications, dealing 1d6 damage on a hit.',\n    cost: 0,\n  },\n];\n","import React, { Component } from 'react';\nimport './Card.css';\nimport { CardData } from '../../types/units';\nimport { CardTable } from './CardTable';\nimport { CardFlags } from '../CardFlags/CardFlags';\nimport { ancestryStats } from '../../fixtures/unitStats';\nimport { traitData, TraitData } from '../../fixtures/traits';\n\ninterface Props {\n  cardData: CardData;\n}\n\nconst Trait = ({ trait }: { trait: TraitData | undefined }) => (\n  <div>\n    {trait ? (\n      <>\n        <b>{trait.name}</b>. {trait.description}\n      </>\n    ) : null}\n  </div>\n);\n\nconst Charge = () => (\n  <Trait trait={traitData.find((data) => data.name === 'Charge')} />\n);\nconst AlwaysDiminished = () => (\n  <Trait trait={traitData.find((data) => data.name === 'Always Diminished')} />\n);\nconst SiegeEngine = () => (\n  <Trait trait={traitData.find((data) => data.name === 'Siege Engine')} />\n);\n\nexport class Card extends Component<Props> {\n  render() {\n    const {\n      name,\n      ancestry,\n      experience,\n      equipment,\n      type,\n      size,\n      attack,\n      defense,\n      power,\n      toughness,\n      morale,\n      cost,\n    } = this.props.cardData;\n\n    return (\n      <div className=\"card\" id=\"card\">\n        <div className=\"card-inner\">\n          <div className=\"card-flags\">\n            <CardFlags\n              ancestry={ancestry}\n              type={type}\n              experience={experience}\n              equipment={equipment}\n            />\n          </div>\n          <div className=\"card-top\">\n            <div className=\"card-name\">{name}</div>\n            {type === 'Levies' || type === 'Siege Engine' ? (\n              <div className=\"card-type\">\n                {ancestry === 'None' ? '' : ancestry} {type}\n              </div>\n            ) : (\n              <div className=\"card-type\">\n                {ancestry === 'None' ? '' : ancestry} {experience}\n                <br />\n                {equipment} {type}\n              </div>\n            )}\n          </div>\n          <div className=\"card-main\">\n            <div className=\"card-cost\">Cost: {cost ? cost : '-'}</div>\n            <CardTable\n              size={size}\n              attack={attack}\n              defense={defense}\n              power={power}\n              toughness={toughness}\n              morale={morale}\n            />\n            {ancestryStats[ancestry].traits.length ||\n            type === 'Cavalry' ||\n            type === 'Siege Engine' ||\n            type === 'Levies' ? (\n              <>\n                <div className=\"card-traits\">Traits</div>\n\n                {ancestryStats[ancestry].traits.map((trait) => (\n                  <Trait trait={traitData.find((t) => t.name === trait)} />\n                ))}\n              </>\n            ) : null}\n            {type === 'Cavalry' && <Charge />}\n            {type === 'Levies' && <AlwaysDiminished />}\n            {type === 'Siege Engine' && <SiegeEngine />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  UnitSize,\n  UnitEquipment,\n  UnitExperience,\n  UnitType,\n  UnitAncestry,\n} from '../types/units';\n\nexport const unitAncestries: UnitAncestry[] = [\n  'None',\n  'Bugbear',\n  'Dragonborn',\n  'Dwarf',\n  'Elf',\n  'Elven (Winged)',\n  'Ghoul',\n  'Gnoll',\n  'Gnome',\n  'Goblin',\n  'Hobgoblin',\n  'Human',\n  'Kobold',\n  'Lizardfolk',\n  'Ogre',\n  'Orc',\n  'Skeleton',\n  'Treant',\n  'Troll',\n  'Zombie',\n];\nexport const unitTypes: UnitType[] = [\n  'Flying',\n  'Archers',\n  'Cavalry',\n  'Levies',\n  'Infantry',\n  'Siege Engine',\n];\nexport const unitExperiences: UnitExperience[] = [\n  'None',\n  'Green',\n  'Regular',\n  'Seasoned',\n  'Veteran',\n  'Elite',\n  'Super-Elite',\n];\nexport const unitEquipments: UnitEquipment[] = [\n  'None',\n  'Light',\n  'Medium',\n  'Heavy',\n  'Super-Heavy',\n];\nexport const unitSizes: UnitSize[] = ['d4', 'd6', 'd8', 'd10', 'd12'];\n","import React, { Component, ReactNode } from 'react';\nimport './Collapse.css';\n\ninterface Props {\n  children: ReactNode;\n  title: string;\n}\ninterface State {\n  collapsed: boolean;\n}\nexport class Collapse extends Component<Props, State> {\n  state = {\n    collapsed: true,\n  };\n  render() {\n    return (\n      <fieldset className=\"collapse\">\n        <legend>\n          <a\n            href=\"#\"\n            onClick={() => this.setState({ collapsed: !this.state.collapsed })}\n          >\n            {this.props.title}\n          </a>\n        </legend>\n        {!this.state.collapsed ? <div>{this.props.children}</div> : null}\n      </fieldset>\n    );\n  }\n}\n","import React from 'react';\nimport './StatForm.css';\nimport { State } from '../../App';\nimport {\n  UnitAncestry,\n  UnitType,\n  UnitExperience,\n  UnitEquipment,\n  UnitSize,\n} from '../../types/units';\nimport {\n  unitAncestries,\n  unitTypes,\n  unitExperiences,\n  unitEquipments,\n  unitSizes,\n} from '../../fixtures/units';\nimport { Collapse } from '../Collapse/Collapse';\n\ninterface Props {\n  state: State;\n  update: (i: Partial<State>) => void;\n}\nexport const StatForm = ({ state, update }: Props) => (\n  <div className=\"stat-form\">\n    <div className=\"form-control\">\n      <label>Name</label>\n      <input\n        type=\"text\"\n        value={state.name}\n        onChange={(e) => update({ name: e.target.value })}\n      />\n    </div>\n    <div className=\"form-control\">\n      <label>Ancestry</label>\n      <select\n        value={state.ancestry}\n        onChange={(e) =>\n          update({\n            ancestry: e.currentTarget.value as UnitAncestry,\n          })\n        }\n      >\n        {unitAncestries.map((value) => (\n          <option value={value} key={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n    </div>\n    <div className=\"form-control\">\n      <label>Type</label>\n      <select\n        value={state.type}\n        onChange={(e) => update({ type: e.currentTarget.value as UnitType })}\n      >\n        {unitTypes.map((value) => (\n          <option value={value} key={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n    </div>\n    <div className=\"form-control\">\n      <label>Experience</label>\n      <select\n        value={state.experience}\n        disabled={state.type === 'Levies' || state.type === 'Siege Engine'}\n        onChange={(e) =>\n          update({\n            experience: e.currentTarget.value as UnitExperience,\n          })\n        }\n      >\n        {unitExperiences.map((value) => (\n          <option value={value} key={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n    </div>\n    <div className=\"form-control\">\n      <label>Equipment</label>\n      <select\n        value={state.equipment}\n        disabled={state.type === 'Levies' || state.type === 'Siege Engine'}\n        onChange={(e) =>\n          update({\n            equipment: e.currentTarget.value as UnitEquipment,\n          })\n        }\n      >\n        {unitEquipments.map((value) => (\n          <option value={value} key={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n    </div>\n    <div className=\"form-control\">\n      <label>Size</label>\n      <select\n        value={state.size}\n        onChange={(e) =>\n          update({\n            size: e.currentTarget.value as UnitSize,\n          })\n        }\n      >\n        {unitSizes.map((value) => (\n          <option value={value} key={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n    </div>\n\n    <Collapse title=\"Advanced options...\">\n      <div className=\"form-control\">\n        <label>Attack adjustment</label>\n        <input\n          type=\"number\"\n          value={state.attack}\n          onChange={(e) => update({ attack: Number(e.target.value) })}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Defense adjustment</label>\n        <input\n          type=\"number\"\n          value={state.defense}\n          onChange={(e) => update({ defense: Number(e.target.value) })}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Power adjustment</label>\n        <input\n          type=\"number\"\n          value={state.power}\n          onChange={(e) => update({ power: Number(e.target.value) })}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Toughness adjustment</label>\n        <input\n          type=\"number\"\n          value={state.toughness}\n          onChange={(e) => update({ toughness: Number(e.target.value) })}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Morale adjustment</label>\n        <input\n          type=\"number\"\n          value={state.morale}\n          onChange={(e) => update({ morale: Number(e.target.value) })}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Cost adjustment</label>\n        <input\n          type=\"number\"\n          value={state.cost}\n          onChange={(e) => update({ cost: Number(e.target.value) })}\n        />\n      </div>\n    </Collapse>\n  </div>\n);\n","import { State } from '../App';\nimport {\n  ancestryStats,\n  experienceStats,\n  equipmentStats,\n  typeStats,\n  sizeStats,\n} from '../fixtures/unitStats';\nimport { traitData } from '../fixtures/traits';\n\nexport const attack = (state: State): number => {\n  return (\n    ancestryStats[state.ancestry].attack +\n    (state.type === 'Levies'\n      ? 0\n      : experienceStats[state.experience].attack +\n        equipmentStats[state.equipment].attack) +\n    typeStats[state.type].attack +\n    state.attack\n  );\n};\n\nexport const power = (state: State): number => {\n  return (\n    ancestryStats[state.ancestry].power +\n    (state.type === 'Levies'\n      ? 0\n      : experienceStats[state.experience].power +\n        equipmentStats[state.equipment].power) +\n    typeStats[state.type].power +\n    state.power\n  );\n};\n\nconst defenseBase = 10;\nexport const defense = (state: State, baseless?: boolean): number => {\n  return (\n    (!baseless ? defenseBase : 0) +\n    ancestryStats[state.ancestry].defense +\n    (state.type === 'Levies'\n      ? 0\n      : experienceStats[state.experience].defense +\n        equipmentStats[state.equipment].defense) +\n    typeStats[state.type].defense +\n    state.defense\n  );\n};\n\nconst toughnessBase = 10;\nexport const toughness = (state: State, baseless?: boolean): number => {\n  return (\n    (!baseless ? toughnessBase : 0) +\n    ancestryStats[state.ancestry].toughness +\n    (state.type === 'Levies'\n      ? 0\n      : experienceStats[state.experience].toughness +\n        equipmentStats[state.equipment].toughness) +\n    typeStats[state.type].toughness +\n    state.toughness\n  );\n};\n\nexport const morale = (state: State): number => {\n  return (\n    ancestryStats[state.ancestry].morale +\n    (state.type === 'Levies'\n      ? 0\n      : experienceStats[state.experience].morale +\n        equipmentStats[state.equipment].morale) +\n    typeStats[state.type].morale +\n    state.morale\n  );\n};\n\nexport const cost = (state: State): number => {\n  let cost =\n    attack(state) +\n    power(state) +\n    defense(state, true) +\n    toughness(state, true) +\n    morale(state) * 2;\n\n  cost = cost * typeStats[state.type].costMultiplier;\n  cost = cost * sizeStats[state.size].costMultiplier;\n  cost = cost * 10;\n  ancestryStats[state.ancestry].traits.forEach((traitName) => {\n    const trait = traitData.find((data) => data.name === traitName);\n    cost += trait ? trait.cost : 0;\n  });\n  cost += 30;\n  cost += state.cost;\n\n  return Math.round(cost);\n};\n","import React, { Component } from 'react';\nimport { Card } from './components/Card/Card';\nimport {\n  UnitAncestry,\n  UnitType,\n  UnitExperience,\n  UnitEquipment,\n  UnitSize,\n  CardData,\n} from './types/units';\nimport { StatForm } from './components/StatForm/StatForm';\nimport {\n  attack,\n  defense,\n  power,\n  toughness,\n  morale,\n  cost,\n} from './utils/statCalculator';\n\nexport interface State {\n  name: string;\n  ancestry: UnitAncestry;\n  type: UnitType;\n  experience: UnitExperience;\n  equipment: UnitEquipment;\n  size: UnitSize;\n  attack: number;\n  defense: number;\n  power: number;\n  toughness: number;\n  morale: number;\n  cost: number;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    name: 'Unit Name',\n    ancestry: 'Human' as UnitAncestry,\n    type: 'Infantry' as UnitType,\n    experience: 'Regular' as UnitExperience,\n    equipment: 'Medium' as UnitEquipment,\n    size: 'd6' as UnitSize,\n    attack: 0,\n    defense: 0,\n    power: 0,\n    toughness: 0,\n    morale: 0,\n    cost: 0,\n  };\n\n  cardData = (): CardData => {\n    return {\n      ...this.state,\n      attack: attack(this.state),\n      defense: defense(this.state),\n      power: power(this.state),\n      toughness: toughness(this.state),\n      morale: morale(this.state),\n      cost: cost(this.state),\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>\n          <small>Strongholds & Followers</small>\n          <br />\n          Unit Card Creator\n        </h1>\n        <StatForm\n          state={this.state}\n          update={(state) => this.setState(state as State)}\n        />\n        <Card cardData={this.cardData()} />\n        <p>\n          <small>\n            For Matt Colville's{' '}\n            <a href=\"https://shop.mcdmproductions.com/products/strongholds-followers-pdf\">\n              Strongholds & Followers\n            </a>\n            .\n          </small>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}